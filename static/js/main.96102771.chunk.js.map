{"version":3,"sources":["firebase/firebase.utils.js","Pages/HomePage.js","Pages/SubmitForm.js","Pages/QuestionCard.js","Pages/Play.js","Pages/QuestionPage.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","storage","StoreUser","userAuth","additionalData","a","userRef","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","message","storeQuestion","data","alert","Question","merge","QuestionList","storeImage","setDisplayImage","storageRef","ref","imageRef","child","put","then","snapshot","getDownloadURL","url","list","collection","snapShot","forEach","push","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","HomePage","setPage","user","className","onClick","signOut","SubmitForm","useState","imageValue","setImageValue","displayImage","useForm","handleSubmit","control","src","alt","height","width","onSubmit","error","as","name","type","defaultValue","autoComplete","rules","required","placeholder","id","onChange","e","event","target","files","accept","htmlFor","QuestionCard","setQuestionData","Play","questions","QuestionsCardList","questionList","map","val","key","QuestionPage","questionData","wholeData","answer","setAnswer","image","setImage","isCorrect","setIsCorrect","Answer","formData","bool","options","value","label","getOptions","isMulti","disabled","App","setUser","page","setQuestions","useEffect","temp","unsuscribe","onAuthStateChanged","route","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.96102771.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBmFYmRZAFz03khfVpdQ_dX9yXZKvvN-jI\",\r\n    authDomain: \"tagg-9192a.firebaseapp.com\",\r\n    databaseURL: \"https://tagg-9192a.firebaseio.com\",\r\n    projectId: \"tagg-9192a\",\r\n    storageBucket: \"tagg-9192a.appspot.com\",\r\n    messagingSenderId: \"433099258283\",\r\n    appId: \"1:433099258283:web:91581830dfb543a1d9faee\",\r\n    measurementId: \"G-PLD4MQN1H6\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n  export const storage = firebase.storage();\r\n\r\n\r\n  export const StoreUser = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n    const snapShot = await userRef.get();\r\n    \r\n    if (!snapShot.exists) {\r\n      const {displayName, email} = userAuth;\r\n      const createdAt = new Date();\r\n      try {\r\n        await userRef.set({displayName, email, createdAt, ...additionalData})\r\n        \r\n      } catch (error) {\r\n        console.log(\"error at creating user\", error.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  export const storeQuestion = async (userAuth, data) => {\r\n    if (!userAuth) return alert(\"Unauthenticated User\");\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n    const snapShot = await userRef.get();\r\n    \r\n    if (snapShot.exists) {\r\n      try {\r\n        await userRef.set({Question: data}, {merge: true})\r\n        QuestionList();\r\n        \r\n      } catch (error) {\r\n        alert(\"Cannot store the submission\")\r\n      }\r\n    } else {\r\n      alert(\"user not stored in database\")\r\n    }\r\n  }\r\n\r\n  export const storeImage = async (userAuth, data, setDisplayImage) => {\r\n    if (!userAuth) return alert(\"Unauthenticated User\");\r\n\r\n    const storageRef = storage.ref();\r\n    const imageRef = storageRef.child(`${userAuth.email}`)\r\n    try {\r\n      await imageRef.put(data).then(function(snapshot) {\r\n      })\r\n\r\n    } catch(error) {\r\n        alert(\"Error in uplaoding file\", error)\r\n    }\r\n    \r\n    \r\n    imageRef.getDownloadURL().then((url) => {\r\n      setDisplayImage(url);\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  export const QuestionList =() => {\r\n    var list = [];\r\n\r\n    \r\n    firestore.collection(\"users\").get().then(\r\n        function(snapShot) {\r\n            snapShot.forEach((doc) => {\r\n                if (doc.data()[\"Question\"])\r\n                {list.push([doc.data()[\"Question\"],doc.data()[\"email\"]])}\r\n            })\r\n        }\r\n    )\r\n\r\n    return list;\r\n      }\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt: 'select_account'});\r\n\r\n\r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n  export default firebase;","import React from 'react';\r\nimport './HomePage.css';\r\nimport {signInWithGoogle, auth} from '../firebase/firebase.utils'\r\n\r\nfunction HomePage({setPage, user}) {\r\n    const handleSigning = () => {\r\n        if (user) {\r\n            auth.signOut();\r\n        } else {\r\n            signInWithGoogle();\r\n        }\r\n    }\r\n\r\n    return <div className=\"HomePageContainer\">\r\n        <div className=\"header\">\r\n            <p onClick={ () => {handleSigning()}}>{user ? \"Sign Out\" : \"Sign In\"}</p>\r\n        </div>\r\n        <div className=\"TitleContainer\">\r\n            <p>THE AARUSHI GUPTA GAME</p>\r\n        </div>\r\n        <div className=\"ButtonContainer\">\r\n            <button className=\"rounded-button\" onClick={() => {if (user) {setPage(\"submit\")} else {signInWithGoogle()}}}>Submit An Entry</button>\r\n            <button className=\"rounded-button\" onClick={()=> {if (user) {setPage(\"game\")} else {signInWithGoogle()}}}>Play!</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default HomePage;","import React, {useState} from 'react';\r\nimport {useForm, Controller} from 'react-hook-form'\r\nimport {storeQuestion, storeImage} from '../firebase/firebase.utils'\r\nimport './SubmitForm.css'\r\n\r\n\r\nfunction SubmitForm({user, setPage}) {\r\n    const [imageValue, setImageValue] = useState(null);\r\n    const [displayImage, setDisplayImage] = useState('#');\r\n\r\n    const {handleSubmit, control } = useForm();\r\n\r\n    const uploadFile = (event) => {\r\n        setImageValue(event.target.files[0])\r\n        storeImage(user, event.target.files[0], setDisplayImage);\r\n        }\r\n\r\n    const onSubmit = (data) => {\r\n        if(imageValue) {\r\n            storeQuestion(user, data);\r\n            setPage(\"home\")\r\n        } else {\r\n            alert(\"Please Select an Image\")\r\n        }\r\n    }\r\n\r\n    const onError = (error) => {\r\n        alert(error.message);\r\n    }\r\n\r\n    \r\n\r\n\r\n    return <div className=\"Page\">\r\n        <div className=\"wrapper\">\r\n            <div className=\"imageWrapper\"><img src={displayImage} alt={\"Memory\"} height=\"200px\" width=\"240px\"/></div>\r\n            <div className=\"formWrapper\">\r\n            <form onSubmit={handleSubmit(onSubmit, onError)}>\r\n                <Controller\r\n                as={<input className=\"inputField\"/>}\r\n                name=\"user_name\"\r\n                type=\"text\"\r\n                defaultValue={user.displayName}\r\n                autoComplete=\"off\"\r\n                control={control}\r\n                rules={{ required: true }}/>\r\n\r\n                <Controller\r\n                as={<input className=\"inputField\" />}\r\n                name=\"hint\"\r\n                type=\"text\"\r\n                defaultValue=\"\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Enter some hint\"\r\n                control={control}\r\n                rules={{ required: true }}/>\r\n\r\n                <Controller\r\n                as={<textarea className=\"memoryField\"/>}\r\n                name=\"memory\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Enter memory related to the photo you have uploaded\"\r\n                control={control}\r\n                rules={{ required: true }}/>\r\n\r\n                <input type=\"file\" id=\"file\" name=\"file\" className=\"file\" onChange={(e) => {uploadFile(e)}} required={true} accept=\"image/*\"/>\r\n                <center>\r\n                <label htmlFor=\"file\">Choose a photo</label>\r\n                </center>\r\n                \r\n                <center>\r\n                <button type=\"submit\" className=\"submitButton\"> Submit </button>\r\n                <button className=\"submitButton\" onClick={()=>{setPage(\"home\")}}>Back</button> \r\n                </center>\r\n            </form>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default SubmitForm;","import React from 'react'\r\nimport './QuestionCard.css'\r\n\r\nfunction QuestionCard({data, setPage, setQuestionData}){\r\n    const viewQuestion = () => {\r\n        setQuestionData(data)\r\n        setPage(\"question\")\r\n    }\r\n    return <div className=\"card\" onClick={() => viewQuestion()}>\r\n        <p className=\"card-content\">{data[0][\"hint\"]}</p>\r\n    </div>\r\n}\r\n\r\nexport default QuestionCard;","import React from 'react'\r\nimport QuestionCard from './QuestionCard'\r\nimport './Play.css'\r\n\r\n\r\n\r\n\r\nfunction Play({setPage, questions, setQuestionData}) {\r\n\r\n    \r\n\r\n      const QuestionsCardList = () => {\r\n          console.log(questions);\r\n          var questionList = questions.map((val, id) => {\r\n              return <QuestionCard key={id} data={val} setPage={setPage} setQuestionData={setQuestionData}/>\r\n          })\r\n          return <div><h2>The hints start here:</h2>{questionList}</div>\r\n      }\r\n\r\n    return <div className=\"PlayPage\">\r\n        <div className = \"Instructions\">\r\n            <h1>Instructions:</h1>\r\n            <p>These are some hints in the purple boxes that are related to one person. Click on the box to answer the question and see who actually wrote it...</p>\r\n            <button onClick={()=> {setPage(\"home\")}} className=\"rounded-button\"> Home </button>\r\n        </div>\r\n        <div className = \"Questions\"><QuestionsCardList/></div>\r\n    </div>\r\n}\r\n\r\nexport default Play;","import React, {useState} from  'react'\r\nimport {useForm, Controller} from 'react-hook-form'\r\nimport Select from 'react-select'\r\nimport {storage} from '../firebase/firebase.utils'\r\nimport './QuestionPage.css'\r\n\r\n\r\n\r\nfunction QuestionPage({setPage, questionData, wholeData}){\r\n    const {control, handleSubmit } = useForm();\r\n    const [answer, setAnswer] = useState(null);\r\n    const [image, setImage] = useState(null)\r\n    const [isCorrect, setIsCorrect] = useState(false);\r\n\r\n    function getImage(){\r\n        const storageRef = storage.ref();\r\n        const imageRef = storageRef.child(`${questionData[1]}`)\r\n        imageRef.getDownloadURL().then((url) => {\r\n            setImage(url);\r\n          })\r\n    }\r\n\r\n\r\n    const getOptions = () => {\r\n        if (wholeData) {\r\n            console.log(wholeData)\r\n          return wholeData.map((val) => {\r\n            return { value: val[1], label: val[0][\"user_name\"] };\r\n          });\r\n        }\r\n      };\r\n\r\n      const answered = (formData) => {\r\n        console.log(formData[\"answer\"])\r\n        getImage();\r\n        const bool = (formData[\"answer\"][\"value\"] === questionData[1]);\r\n        console.log(bool)\r\n        setIsCorrect(bool);\r\n        setAnswer(formData[\"answer\"][\"value\"])\r\n      }\r\n\r\n      const Answer = () => {\r\n          return <div className=\"AnswerContainer\">\r\n              <div className=\"Result\"><h2>{isCorrect ? \"Correct\" : \"Wrong!!\"}</h2></div>\r\n              <div className=\"QuestionDetails\"><p>{`Submitted by:  ${questionData[0][\"user_name\"]} (${questionData[1]})`}</p></div>\r\n              <div className=\"AnswerImage\"><img src={image} alt=\"Memory\" height=\"240px\" width=\"240px\"/></div>\r\n              <div className=\"AnswerMemory\"><h2>Memory:</h2>{questionData[0][\"memory\"]}</div>\r\n          </div>\r\n      }\r\n\r\n    return <div className=\"QuestionPage\">\r\n        <div className=\"questionPart\">\r\n            <h2>So who do you think wrote this:</h2>\r\n            <p>{questionData[0][\"hint\"]}</p>\r\n            <form onSubmit={handleSubmit(answered)}>\r\n            <Controller\r\n              as={\r\n                <Select\r\n                  options={getOptions()}\r\n                  isMulti={false}\r\n                  className=\"select\"\r\n                />\r\n              }\r\n              type=\"select\"\r\n              name=\"answer\"\r\n              rules={{required: true}}\r\n              control={control}\r\n            />\r\n            <button type=\"submit\" className=\"rounded-button\" disabled={answer}>Submit</button>\r\n            </form>\r\n        </div>\r\n        <div className=\"answerPart\">\r\n            {answer ? <Answer/> : <div></div>}\r\n            <button className=\"rounded-button\" onClick={() => {setPage(\"game\")}}>back</button>\r\n        </div>\r\n        \r\n    </div>\r\n}\r\n\r\nexport default QuestionPage;","import React, {useEffect, useState} from 'react';\r\nimport HomePage from './Pages/HomePage'\r\nimport SubmitForm from './Pages/SubmitForm';\r\nimport Play from './Pages/Play';\r\nimport { auth, StoreUser, QuestionList} from './firebase/firebase.utils'\r\nimport './App.css';\r\nimport QuestionPage from './Pages/QuestionPage';\r\n\r\nfunction App() {\r\n  const[user, setUser] = useState(null);\r\n  const[page, setPage] = useState(\"home\");\r\n  const[questionData, setQuestionData] = useState(null);\r\n  const[questions, setQuestions] = useState(null)\r\n  useEffect(() => {\r\n    var temp = QuestionList();\r\n    setQuestions(temp);\r\n  },[])\r\n\r\n  \r\n\r\n  const route = () => {\r\n    switch(page){\r\n      case \"home\": return <HomePage setPage={setPage} user={user}/>\r\n      case \"submit\": return <SubmitForm setPage={setPage} user={user}/>\r\n      case \"game\":  return <Play setPage={setPage} questions={questions} setQuestionData={setQuestionData}/>\r\n      case \"question\": return <QuestionPage setPage={setPage} questionData={questionData} wholeData={questions}/>\r\n      default: return <div>error</div>\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect( () => {var unsuscribe = null;\r\n                    unsuscribe = auth.onAuthStateChanged(user => {setUser(user); StoreUser(user);})\r\n                    \r\n                    return function cleanup(){\r\n                      unsuscribe();\r\n                    }; } )\r\n\r\n  return (<div>\r\n    { route()\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}